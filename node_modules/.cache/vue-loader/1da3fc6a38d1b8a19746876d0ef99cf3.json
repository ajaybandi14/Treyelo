{"remainingRequest":"/Users/ajay/Documents/projects/other/treyelo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ajay/Documents/projects/other/treyelo/src/components/Board.vue?vue&type=style&index=0&id=e1ee1034&scoped=true&lang=css&","dependencies":[{"path":"/Users/ajay/Documents/projects/other/treyelo/src/components/Board.vue","mtime":1625063871224},{"path":"/Users/ajay/Documents/projects/other/treyelo/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ajay/Documents/projects/other/treyelo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ajay/Documents/projects/other/treyelo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ajay/Documents/projects/other/treyelo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ajay/Documents/projects/other/treyelo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhlYWRlci13cmFwcGVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLm1haW4tdGV4dCB7CiAgY29sb3I6ICMyYzNlNTA7Cn0KLmJvYXJkIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KLmxpc3Qtd3JhcHBlciB7CiAgb3ZlcmZsb3cteDogc2Nyb2xsOwogIGRpc3BsYXk6IGJsb2NrOwogIHdoaXRlLXNwYWNlOiBub3dyYXA7Cn0KLnZlcnRpY2FsLWxpc3QtY29udGFpbmVyIHsKICBtYXgtd2lkdGg6IDEwMHB4OwogIHdpZHRoOiAxMDBweDsKICBvdmVyZmxvdy15OiBzY3JvbGw7CiAgaGVpZ2h0OiAxMDB2aDsKICBtYXgtaGVpZ2h0OiA3MHZoOwogIGJhY2tncm91bmQ6ICNlNGU0ZTQ7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHBhZGRpbmc6IDVweDsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgbWFyZ2luOiAxMHB4IDJweDsKICBib3JkZXItcmFkaXVzOiAzcHg7Cn0KLmxpc3QtdGl0bGUgewogIG1hcmdpbjogMTBweDsKICBmb250LXNpemU6IDE2cHg7CiAgZm9udC13ZWlnaHQ6IDkwMDsKfQoucmVtb3ZlLWJ0biB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHJpZ2h0OiAxMHB4OwogIGZvbnQtc2l6ZTogMTBweDsKICBib3JkZXItcmFkaXVzOiA1MCU7CiAgd2lkdGg6IDE1cHg7CiAgaGVpZ2h0OiAxNXB4OwogIHBhZGRpbmc6IDA7CiAgY3Vyc29yOiBwb2ludGVyOwogIGNvbG9yOiAjNmY2ZjZmOwp9Ci5yZW1vdmUtYnRuOmhvdmVyIHsKICBiYWNrZ3JvdW5kOiAjZDBkMGQwOwogIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC41czsKfQouYWRkLWJ0biB7CiAgcG9zaXRpb246IHN0aWNreTsKICBib3R0b206IDA7CiAgaGVpZ2h0OiAyMHB4OwogIHdpZHRoOiAyMHB4OwogIGJvcmRlci1yYWRpdXM6IDUwcHg7CiAgY3Vyc29yOiBwb2ludGVyOwogIGJhY2tncm91bmQ6ICNkZGQ7CiAgbWFyZ2luOiAwIGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKfQouYWRkLWxpc3QtYnRuIHsKICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoCiAgICA5MGRlZywKICAgIGhzbGEoMzUwLCA5MyUsIDYxJSwgMSkgMCUsCiAgICBoc2xhKDgsIDk4JSwgNTklLCAxKSAxMDAlCiAgKTsKICBjb2xvcjogI2ZmZjsKICBmb250LXdlaWdodDogNjAwOwogIHBhZGRpbmc6IDEwcHggMjBweDsKICBib3JkZXI6IG5vbmU7CiAgYm9yZGVyLXJhZGl1czogM3B4OwogIGN1cnNvcjogcG9pbnRlcjsKICBib3gtc2hhZG93OiAwcHggMnB4IDVweCAxcHggcmdiYSg1MywgNTMsIDUzLCAwLjI4MSk7Cn0KLmFkZC1saXN0LWJ0bjphY3RpdmUgewogIGJveC1zaGFkb3c6IG5vbmU7CiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAwLjNzOwp9Ci5jYXJkIHsKICB3aWR0aDogMTAwJTsKICBtYXgtaGVpZ2h0OiAxMDBweDsKICBvdmVyZmxvdzogc2Nyb2xsOwogIGJhY2tncm91bmQ6IHdoaXRlOwogIG1hcmdpbi1ib3R0b206IDVweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgYm9yZGVyLXJhZGl1czogM3B4Owp9Ci5jYXJkLXRpdGxlIHsKICBmb250LXNpemU6IDE0cHg7CiAgZm9udC13ZWlnaHQ6IDcwMDsKICBtYXJnaW46IDEwcHggMDsKfQouY2FyZC1kZXNjcmlwdGlvbiB7CiAgZm9udC1zaXplOiAxMnB4OwogIG1hcmdpbjogMTBweCAwOwp9Ci5lbGxpcHNpczEwMCB7CiAgbWF4LXdpZHRoOiAxMDBweDsKICBvdmVyZmxvdzogaGlkZGVuOwogIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwp9Cg=="},{"version":3,"sources":["Board.vue"],"names":[],"mappingsfile":"Board.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"board\">\n    <!-- Main - Head Section Start -->\n    <div class=\"header-wrapper\">\n      <h1 class=\"main-text\">{{ msg }}</h1>\n      <button class=\"add-list-btn\" @click=\"addNewList()\">Add New List</button>\n    </div>\n    <!-- Main - Head Section End -->\n\n    <!-- Tre-yelo list Section Begin -->\n    <div class=\"list-wrapper\">\n      <div\n        class=\"vertical-list-container\"\n        v-bind:key=\"index\"\n        v-for=\"(list, index) in lists\"\n        @drop=\"drop\"\n        @dragenter.prevent\n        @dragover.prevent\n        :id=\"`dropTarget-${index}`\"\n      >\n        <div class=\"remove-btn\" @click=\"removeList(index)\">x</div>\n        <div\n          class=\"list-title ellipsis100\"\n          @input=\"nameChange($event, index, null, 'list')\"\n          contenteditable=\"true\"\n        >\n          {{ list.title }}\n        </div>\n        <!-- Tre-yelo Card Section Begin -->\n        <div\n          class=\"card\"\n          v-bind:key=\"i\"\n          v-for=\"(card, i) in list.cards\"\n          @dragstart=\"dragStart\"\n          draggable=\"true\"\n          :id=\"`dragTarget-${index}-${i}`\"\n        >\n          <div class=\"remove-btn\" @click=\"removeCard(index, i)\">x</div>\n          <div\n            class=\"card-title ellipsis100\"\n            @input=\"nameChange($event, index, i, 'cardTitle')\"\n            contenteditable=\"true\"\n          >\n            {{ card.title }}\n          </div>\n          <div\n            class=\"card-description ellipsis100\"\n            @input=\"nameChange($event, index, i, 'cardDescription')\"\n            contenteditable=\"true\"\n          >\n            {{ card.description }}\n          </div>\n        </div>\n        <!-- Tre-yelo Card Section End -->\n        <div class=\"add-btn\" @click=\"addNewCard(index)\">+</div>\n      </div>\n    </div>\n    <!-- Tre-yelo List Section End -->\n  </div>\n</template>\n\n<script>\nimport List from \"../assets/list.json\";\nexport default {\n  name: \"Board\",\n  props: {\n    msg: String,\n  },\n  methods: {\n    initList() {\n      // Initialize lists if no data present in storage\n      return List.data;\n    },\n    dragStart(event) {\n      // Remember the element being dragged\n      event.dataTransfer.setData(\"ListItem\", event.target.id);\n\n      // Hide all the add buttons in list\n      this.dragAction(\"hide\");\n    },\n    dragAction(action) {\n      // Select all add buttons in list\n      let btns = document.querySelectorAll(\".add-btn\");\n      for (let i = 0; i < btns.length; i++) {\n        // Hide button if some card is being dragged\n        btns[i].style.display = action === \"hide\" ? \"none\" : \"initial\";\n      }\n    },\n    drop(event) {\n      event.preventDefault();\n      // Read item last dragged\n      let data = event.dataTransfer.getData(\"ListItem\");\n\n      // List Index\n      let fromListIndex = data.split(\"-\")[1];\n      // Card Position\n      let fromListCardIndex = data.split(\"-\")[2];\n      // List Index that the card was dropped onto\n      let targetListIndex = event.target.id.split(\"-\")[1];\n      if (targetListIndex !== fromListIndex) {\n        // unshift the new card\n        // Only if target list is DIFF as source list\n        this.lists[targetListIndex].cards.unshift(\n          this.lists[fromListIndex].cards[fromListCardIndex]\n        );\n        // Remove the card from original list\n        this.removeCard(fromListIndex, fromListCardIndex);\n      } else {\n        // If target list is same as source list\n        // do not unshift the new card\n        event.target.appendChild(document.getElementById(data));\n      }\n\n      // Show the add button after card is dragged\n      this.dragAction(\"show\");\n    },\n    addNewList() {\n      this.lists.push({ title: `List ${this.lists.length}`, cards: [] });\n    },\n    addNewCard(listIndex) {\n      this.lists[listIndex].cards.push({\n        title: `Card [${listIndex}][${this.lists[listIndex].cards.length}]`,\n        description: `Card of ${this.lists[listIndex].title}`,\n      });\n    },\n    nameChange(e, listIndex, cardIndex, obj) {\n      if (obj === \"list\") {\n        this.lists[listIndex].title = e.target.innerHTML;\n      } else if (obj === \"cardTitle\") {\n        this.lists[listIndex].cards[cardIndex].title = e.target.innerHTML;\n      } else if (obj === \"cardDescription\") {\n        this.lists[listIndex].cards[cardIndex].description = e.target.innerHTML;\n      }\n    },\n    removeCard(listIndex, cardIndex) {\n      this.lists[listIndex].cards.splice(cardIndex, 1);\n    },\n    removeList(listIndex) {\n      this.lists.splice(listIndex, 1);\n    },\n    updateBoard() {\n      localStorage.setItem(\"lists\", JSON.stringify(this.lists));\n    },\n    getLists() {\n      return JSON.parse(localStorage.getItem(\"lists\"));\n    },\n  },\n  data() {\n    return {\n      lists: [],\n    };\n  },\n  beforeUpdate() {\n    this.updateBoard();\n  },\n  mounted() {\n    this.lists = this.listsArray;\n  },\n  computed: {\n    listsArray() {\n      if (this.getLists() == null || !this.getLists().length) {\n        return this.initList();\n      } else {\n        return this.getLists();\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.header-wrapper {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n}\n.main-text {\n  color: #2c3e50;\n}\n.board {\n  position: relative;\n}\n.list-wrapper {\n  overflow-x: scroll;\n  display: block;\n  white-space: nowrap;\n}\n.vertical-list-container {\n  max-width: 100px;\n  width: 100px;\n  overflow-y: scroll;\n  height: 100vh;\n  max-height: 70vh;\n  background: #e4e4e4;\n  position: relative;\n  padding: 5px;\n  display: inline-block;\n  margin: 10px 2px;\n  border-radius: 3px;\n}\n.list-title {\n  margin: 10px;\n  font-size: 16px;\n  font-weight: 900;\n}\n.remove-btn {\n  position: absolute;\n  right: 10px;\n  font-size: 10px;\n  border-radius: 50%;\n  width: 15px;\n  height: 15px;\n  padding: 0;\n  cursor: pointer;\n  color: #6f6f6f;\n}\n.remove-btn:hover {\n  background: #d0d0d0;\n  transition: background 0.5s;\n}\n.add-btn {\n  position: sticky;\n  bottom: 0;\n  height: 20px;\n  width: 20px;\n  border-radius: 50px;\n  cursor: pointer;\n  background: #ddd;\n  margin: 0 auto;\n  margin-top: 20px;\n}\n.add-list-btn {\n  background: linear-gradient(\n    90deg,\n    hsla(350, 93%, 61%, 1) 0%,\n    hsla(8, 98%, 59%, 1) 100%\n  );\n  color: #fff;\n  font-weight: 600;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n  box-shadow: 0px 2px 5px 1px rgba(53, 53, 53, 0.281);\n}\n.add-list-btn:active {\n  box-shadow: none;\n  transition: box-shadow 0.3s;\n}\n.card {\n  width: 100%;\n  max-height: 100px;\n  overflow: scroll;\n  background: white;\n  margin-bottom: 5px;\n  cursor: pointer;\n  border-radius: 3px;\n}\n.card-title {\n  font-size: 14px;\n  font-weight: 700;\n  margin: 10px 0;\n}\n.card-description {\n  font-size: 12px;\n  margin: 10px 0;\n}\n.ellipsis100 {\n  max-width: 100px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n</style>\n"]}]}